global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-paponova.2sem.students-projects.ru
    path: /
    pathType: Prefix
    tlsSecret: 2sem-students-projects-wildcard-secret
  containerPort: 80
  image: paponova/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "300"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  image: paponova/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 5
    failureThreshold: 5
  vpa:
    updatePolicy:
      updateMode: "Off"

backend-report:
  annotations:
    path: /health
    port: "8080"
    scrape: "true"
  service:
    port: "8080"
  revisionHistoryLimit: 3
  strategy: Recreate
  image: paponova/sausage-backend-report:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "180Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 5
    failureThreshold: 5
  hpa:
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 50

infra:
  postgresql:
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
    containerPort: 5432
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    containerPort: 27017
